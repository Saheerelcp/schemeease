# Generated by Django 5.2.4 on 2025-08-02 15:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('benefits', models.TextField()),
                ('min_age', models.PositiveIntegerField(blank=True, null=True)),
                ('max_age', models.PositiveIntegerField(blank=True, null=True)),
                ('eligible_castes', models.CharField(blank=True, choices=[('Any', 'Any'), ('SC,ST', 'SCST'), ('OBC', 'OBC'), ('General', 'General')], default='Any', max_length=255)),
                ('income_limit', models.FloatField(blank=True, help_text='Annual income upper limit in INR', null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Any', 'Any')], default='Any', max_length=10)),
                ('required_education', models.CharField(blank=True, choices=[('any', 'Any'), ('below_10', 'Below 10th'), ('10', '10th'), ('12', '12th'), ('diploma', 'Diploma'), ('ug', 'Undergraduate (UG)'), ('pg', 'Postgraduate (PG)'), ('phd', 'PhD / Doctorate'), ('other', 'Other')], default='any', help_text='Select the minimum educational qualification required', max_length=20)),
                ('disability_required', models.CharField(choices=[('Any', 'Any'), ('Yes', 'Yes'), ('None', 'None')], default='None', max_length=30)),
                ('occupation', models.CharField(blank=True, choices=[('student', 'Student'), ('farmer', 'Farmer'), ('teacher', 'Teacher'), ('government_employee', 'Government Employee'), ('private_employee', 'Private Sector Employee'), ('business', 'Business'), ('homemaker', 'Homemaker'), ('unemployed', 'Unemployed'), ('retired', 'Retired'), ('other', 'Other'), ('any', 'Any')], default='any', help_text='Select your employment or occupation status', max_length=30)),
                ('department', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Education', 'Education'), ('Healthcare', 'Healthcare'), ('Employment', 'Employment'), ('Housing', 'Housing'), ('Social Welfare', 'Social Welfare')], max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('required_documents', models.TextField(blank=True, help_text='List required documents, separated by commas')),
                ('attachment', models.FileField(blank=True, upload_to='scheme_docs/')),
            ],
        ),
        migrations.CreateModel(
            name='UpdatedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EligibilityQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('expected_answer', models.CharField(max_length=20)),
                ('field_name', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('boolean', 'Yes/No'), ('text', 'Text'), ('number', 'Number')], max_length=20)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='schemeapp.scheme')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(blank=True, max_length=50, null=True)),
                ('dob', models.DateField(null=True)),
                ('gender', models.CharField(max_length=10, null=True)),
                ('phone', models.CharField(max_length=10, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('aadhar', models.CharField(max_length=12, null=True)),
                ('state', models.CharField(max_length=40, null=True)),
                ('district', models.CharField(max_length=40, null=True)),
                ('pincode', models.CharField(max_length=6, null=True)),
                ('address', models.TextField(null=True)),
                ('occupation', models.CharField(max_length=40, null=True)),
                ('income', models.BigIntegerField(null=True)),
                ('marital', models.CharField(max_length=20, null=True)),
                ('caste', models.CharField(max_length=10, null=True)),
                ('disability', models.CharField(max_length=10, null=True)),
                ('is_profile_complete', models.BooleanField(default=False)),
                ('rural', models.CharField(max_length=15, null=True)),
                ('study', models.CharField(max_length=20, null=True)),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
